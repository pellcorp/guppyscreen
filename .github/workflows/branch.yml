name: branch build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: mipsel-buildroot-linux-musl-
            small: false
            asset: guppyscreen
            calibrate: false
            belt_calibrations: true
            factory_reset: true

          - arch: mipsel-buildroot-linux-musl-
            small: true
            asset: guppyscreen-smallscreen
            calibrate: true
            belt_calibrations: true
            factory_reset: true

          - arch: armv8-rpi3-linux-gnueabihf-
            small: false
            calibrate: false
            factory_reset: false
            belt_calibrations: false
            asset: guppyscreen-rpi

    runs-on: ubuntu-22.04
    container:
      image: pellcorp/guppydev:latest
      options: --user 1001

    env:
      CROSS_COMPILE: ${{ matrix.arch }}
      CC: ${{ matrix.arch }}
      CXX: ${{ matrix.arch }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: set guppyscreen version
      run: |
        echo "GUPPYSCREEN_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
        echo "GUPPYSCREEN_VERSION=${{ github.sha }}" >> $GITHUB_ENV

    - if: matrix.small
      name: export screen size
      run: |
        echo "GUPPY_SMALL_SCREEN=${{ matrix.small }}" >> $GITHUB_ENV

    - if: matrix.belt_calibrations
      name: export belt_calibrations flag
      run: |
        echo "GUPPY_BELT_CALIBRATIONS=${{ matrix.belt_calibrations }}" >> $GITHUB_ENV

    - if: matrix.factory_reset
      name: export factory reset flag
      run: |
        echo "GUPPY_FACTORY_RESET=${{ matrix.factory_reset }}" >> $GITHUB_ENV

    - if: matrix.calibrate
      name: export touch calibrate
      run: |
        echo "GUPPY_CALIBRATE=${{ matrix.calibrate }}" >> $GITHUB_ENV

    - name: patch lv_drivers
      run: |
        git apply ../patches/0001-lv_driver_fb_ioctls.patch
      working-directory: ./lv_drivers

    - name: patch fmt in spdlog
      run: |
        git apply ../patches/0002-spdlog_fmt_initializer_list.patch
      working-directory: ./spdlog

    - name: patch dpi text scale in lvgl
      run: |
        git apply ../patches/0003-lvgl-dpi-text-scale.patch
      working-directory: ./lvgl

    - name: make wpaclient
      run: make wpaclient

    - name: make libhv
      run: make libhv.a

    - name: make libspdlog
      run: make libspdlog.a

    - name: make guppyscreen
      run: make -j

    - name: package release
      run: |
        chmod +x ./release.sh
        ./release.sh ${{ matrix.asset }} ${{ github.sha }} ${{ github.ref_name }}

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset }}
        path: ./${{ matrix.asset }}.tar.gz

    # fixme - not sure how to allow creation of releases from a pull request
    - if: github.event_name != 'pull_request'
      name: branch release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        files: ${{ matrix.asset }}.tar.gz
        fail_on_unmatched_files: true
